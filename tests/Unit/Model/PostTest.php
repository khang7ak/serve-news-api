<?php

namespace Tests\Unit\Model;

use Illuminate\Foundation\Testing\DatabaseMigrations;
use PHPUnit\Framework\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Faker\Factory as Faker;
use App\Post;

class PostTest extends TestCase
{
//    protected $post;
//    use DatabaseMigrations;
//
//    public function setUp(): void
//    {
//        parent::setUp(); // TODO: Change the autogenerated stub {VIỆC CẦN LÀM: Thay đổi bản gốc được tạo tự động}
//        $this->faker = Faker::create();
//        // chuẩn bị dữ liệu test
//        $this->post = [
//            'title' => $this->faker->name,
//            'post_category' => $this->faker->numberBetween(1, 3),
//            'post_sub' => $this->faker->text(255),
//            'post_content' => $this->faker->text(10000),
//            'post_image' => $this->faker->imageUrl('1000', '1000'),
//        ];
//        $this->post = new Post();
//    }
//
//    /**
//     * A basic unit test example.
//     *
//     * @return void
//     */
//    public function testStore(){
//        //Gọi hàm tạo
//        $post = $this->post->store($this->post);
//        //Kiểm tra xem kết quả trả về có là thể hiện của lớp Post hay ko
//        $this->assertInstanceOf(Post::class, $post);
//        //Kiểm tra data trả về
//        $this->assertEquals($this->post['title'], $post->title);
//        $this->assertEquals($this->post['post_category'], $post->post_category);
//        $this->assertEquals($this->post['post_sub'], $post->post_sub);
//        $this->assertEquals($this->post['post_content'], $post->post_content);
//        $this->assertEquals($this->post['post_image'], $post->post_image);
//    }
}
